// alarm_logic.c.inc - AUTO-GENERATED by generate_alarms.py. DO NOT EDIT.
// This file is designed to be #included directly into sysAlertMon.c

const AlarmInfo alarmInfo[ALARM_COUNT] = {
    /* 0 */ { 0, ALARM_TYPE_INFO, "spare", "spare", 0 },
    /* 1 */ { 1, ALARM_TYPE_CRITICAL, "Tank Level Critically Low", "Water Level in Tank is Critically Low", 5 },
    /* 2 */ { 2, ALARM_TYPE_WARN, "Tank Overfill Condition", "Tank Overfill Detected", 5 },
    /* 3 */ { 3, ALARM_TYPE_CRITICAL, "Irrigation Pump Temp Low", "Irrigation Pump Temperature Exceeding Low Limit", 5 },
    /* 4 */ { 4, ALARM_TYPE_CRITICAL, "House Supply Temp Low", "", 5 },
    /* 5 */ { 5, ALARM_TYPE_CRITICAL, "House Water Pressure Low", "Household Water Pressure Critically Low", 5 },
    /* 6 */ { 6, ALARM_TYPE_CRITICAL, "Irrigation Water Pressure Low", "Household Water Pressure Critically Low", 5 },
    /* 7 */ { 7, ALARM_TYPE_CRITICAL, "Septic System Alert", "Septic System Malfunction", 5 },
    /* 8 */ { 8, ALARM_TYPE_CRITICAL, "Irrigation Pump Run Away", "Irrigation Pump Running with No Flow", 5 },
    /* 9 */ { 9, ALARM_TYPE_CRITICAL, "Well 3 Pump Run Away", "Well 3 Pump Running with No Flow", 5 },
    /* 10 */ { 10, ALARM_TYPE_WARN, "Well 1 Not Starting", "Water Well Pumps Failed to Start", 5 },
    /* 11 */ { 11, ALARM_TYPE_WARN, "Well 2 Not Starting", "Water Well Pumps Failed to Start", 5 },
    /* 12 */ { 12, ALARM_TYPE_WARN, "Well 3 Not Starting", "Water Well #3 Pump ON but Flow is Less Than 2 Gal per Minute", 5 },
    /* 13 */ { 13, ALARM_TYPE_WARN, "Well 1 RunCount Exceeded", "Pump 1 Run Count is Excessive", 0 },
    /* 14 */ { 14, ALARM_TYPE_INFO, "Well 1 RunTime Exceeded", "Pump 1 Run Time is Excessive", 0 },
    /* 15 */ { 15, ALARM_TYPE_WARN, "Well 2 RunCount Exceeded", "Pump 2 Run Count is Excessive", 0 },
    /* 16 */ { 16, ALARM_TYPE_INFO, "Well 2 RunTime Exceeded", "Pump 2 Run Time is Excessive", 0 },
    /* 17 */ { 17, ALARM_TYPE_WARN, "Well 3 RunCount Exceeded", "Pump 3 Run Count is Excessive", 0 },
    /* 18 */ { 18, ALARM_TYPE_INFO, "Well 3 RunTime Exceeded", "Pump 3 Run Time is Excessive", 0 },
    /* 19 */ { 19, ALARM_TYPE_WARN, "Irrigation Pump RunCount Exceeded", "Pump 4 Run Count is Excessive", 0 },
    /* 20 */ { 20, ALARM_TYPE_INFO, "Irrigation Pump RunTime Exceeded", "Pump 4 Run Time is Excessive", 0 },
};

void check_alarms(alert_data_t* output_alert_data)
{
    bool condition = false;

    // --- Alarm 0: SPARE ---
    update_alarm_state(output_alert_data, 0, false);

    // --- Alarm 1: Tank Level Critically Low ---
    condition = (tankMon_.tank.float2 == true);
    update_alarm_state(output_alert_data, 1, condition);

    // --- Alarm 2: Tank Overfill Condition ---
    condition = (tankMon_.tank.tank_gallons > 2275);
    update_alarm_state(output_alert_data, 2, condition);

    // --- Alarm 3: Irrigation Pump Temp Low ---
    condition = (irrigationMon_.irrigation.temperatureF < 35);
    update_alarm_state(output_alert_data, 3, condition);

    // --- Alarm 4: House Supply Temp Low ---
    condition = (houseMon_.house.temperatureF < 35);
    update_alarm_state(output_alert_data, 4, condition);

    // --- Alarm 5: House Water Pressure Low ---
    condition = (houseMon_.house .pressurePSI < 40);
    update_alarm_state(output_alert_data, 5, condition);

    // --- Alarm 6: Irrigation Water Pressure Low ---
    condition = (irrigationMon_.irrigation.pressurePSI < 40);
    update_alarm_state(output_alert_data, 6, condition);

    // --- Alarm 7: Septic System Alert ---
    condition = (wellMon_.well.septic_alert_on == true);
    update_alarm_state(output_alert_data, 7, condition);

    // --- Alarm 8: Irrigation Pump Run Away ---
    condition = (wellMon_.well.irrigation_pump_on == true) && (irrigationMon_.irrigation.gallonsMinute < 2);
    update_alarm_state(output_alert_data, 8, condition);

    // --- Alarm 9: Well 3 Pump Run Away ---
    condition = (wellMon_.well.well_pump_3_on == true) && (tankMon_.tank.gallonsMinute < 2);
    update_alarm_state(output_alert_data, 9, condition);

    // --- Alarm 10: Well 1 Not Starting ---
    condition = (wellMon_.well.House_tank_pressure_switch_on == true) && (wellMon_.well.well_pump_1_on == false);
    update_alarm_state(output_alert_data, 10, condition);

    // --- Alarm 11: Well 2 Not Starting ---
    condition = (wellMon_.well.House_tank_pressure_switch_on == true) && (wellMon_.well.well_pump_2_on == false);
    update_alarm_state(output_alert_data, 11, condition);

    // --- Alarm 12: Well 3 Not Starting ---
    condition = (wellMon_.well.well_pump_3_on == true) && (tankMon_.tank.gallonsMinute < 2);
    update_alarm_state(output_alert_data, 12, condition);

    // --- Alarm 13: Well 1 RunCount Exceeded ---
    condition = (monitor_.monitor.Pump_1_RunCount > 25);
    update_alarm_state(output_alert_data, 13, condition);

    // --- Alarm 14: Well 1 RunTime Exceeded ---
    condition = (monitor_.monitor.Pump_1_RunTime > 15);
    update_alarm_state(output_alert_data, 14, condition);

    // --- Alarm 15: Well 2 RunCount Exceeded ---
    condition = (monitor_.monitor.Pump_2_RunCount > 25);
    update_alarm_state(output_alert_data, 15, condition);

    // --- Alarm 16: Well 2 RunTime Exceeded ---
    condition = (monitor_.monitor.Pump_2_RunTime > 15);
    update_alarm_state(output_alert_data, 16, condition);

    // --- Alarm 17: Well 3 RunCount Exceeded ---
    condition = (monitor_.monitor.Pump_3_RunCount > 10);
    update_alarm_state(output_alert_data, 17, condition);

    // --- Alarm 18: Well 3 RunTime Exceeded ---
    condition = (monitor_.monitor.Pump_3_RunTime > 300);
    update_alarm_state(output_alert_data, 18, condition);

    // --- Alarm 19: Irrigation Pump RunCount Exceeded ---
    condition = (monitor_.monitor.Pump_4_RunCount > 25);
    update_alarm_state(output_alert_data, 19, condition);

    // --- Alarm 20: Irrigation Pump RunTime Exceeded ---
    condition = (monitor_.monitor.Pump_4_RunTime > 200);
    update_alarm_state(output_alert_data, 20, condition);

}